// Code generated by lark suite oapi sdk gen
package v1

import (
	"github.com/larksuite/oapi-sdk-go/api/core/tools"
)

type App struct {
	AppToken        string   `json:"app_token,omitempty"`
	Name            string   `json:"name,omitempty"`
	Revision        int      `json:"revision,omitempty"`
	FolderToken     string   `json:"folder_token,omitempty"`
	Url             string   `json:"url,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *App) MarshalJSON() ([]byte, error) {
	type cp App
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppRole struct {
	RoleName        string              `json:"role_name,omitempty"`
	RoleId          string              `json:"role_id,omitempty"`
	TableRoles      []*AppRoleTableRole `json:"table_roles,omitempty"`
	ForceSendFields []string            `json:"-"`
}

func (s *AppRole) MarshalJSON() ([]byte, error) {
	type cp AppRole
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppRoleMember struct {
	MemberId         string   `json:"member_id,omitempty"`
	OpenId           string   `json:"open_id,omitempty"`
	UnionId          string   `json:"union_id,omitempty"`
	UserId           string   `json:"user_id,omitempty"`
	ChatId           string   `json:"chat_id,omitempty"`
	DepartmentId     string   `json:"department_id,omitempty"`
	OpenDepartmentId string   `json:"open_department_id,omitempty"`
	MemberName       string   `json:"member_name,omitempty"`
	MemberEnName     string   `json:"member_en_name,omitempty"`
	MemberType       string   `json:"member_type,omitempty"`
	ForceSendFields  []string `json:"-"`
}

func (s *AppRoleMember) MarshalJSON() ([]byte, error) {
	type cp AppRoleMember
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppRoleTableRole struct {
	TableName       string                     `json:"table_name,omitempty"`
	TablePerm       int                        `json:"table_perm,omitempty"`
	RecRule         *AppRoleTableRoleRecRule   `json:"rec_rule,omitempty"`
	FieldPerm       *AppRoleTableRoleFieldPerm `json:"field_perm,omitempty"`
	ForceSendFields []string                   `json:"-"`
}

func (s *AppRoleTableRole) MarshalJSON() ([]byte, error) {
	type cp AppRoleTableRole
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppRoleTableRoleFieldPerm struct {
}

type AppRoleTableRoleRecRule struct {
	Conditions      []*AppRoleTableRoleRecRuleCondition `json:"conditions,omitempty"`
	Conjunction     string                              `json:"conjunction,omitempty"`
	OtherPerm       int                                 `json:"other_perm,omitempty"`
	ForceSendFields []string                            `json:"-"`
}

func (s *AppRoleTableRoleRecRule) MarshalJSON() ([]byte, error) {
	type cp AppRoleTableRoleRecRule
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppRoleTableRoleRecRuleCondition struct {
	FieldName       string   `json:"field_name,omitempty"`
	Operator        string   `json:"operator,omitempty"`
	Value           []string `json:"value,omitempty"`
	FieldType       int      `json:"field_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppRoleTableRoleRecRuleCondition) MarshalJSON() ([]byte, error) {
	type cp AppRoleTableRoleRecRuleCondition
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTable struct {
	TableId         string   `json:"table_id,omitempty"`
	Revision        int      `json:"revision,omitempty"`
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppTable) MarshalJSON() ([]byte, error) {
	type cp AppTable
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableField struct {
	FieldId         string                 `json:"field_id,omitempty"`
	FieldName       string                 `json:"field_name,omitempty"`
	Type            int                    `json:"type,omitempty"`
	Property        *AppTableFieldProperty `json:"property,omitempty"`
	ForceSendFields []string               `json:"-"`
}

func (s *AppTableField) MarshalJSON() ([]byte, error) {
	type cp AppTableField
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableFieldProperty struct {
	Options         []*AppTableFieldPropertyOption `json:"options,omitempty"`
	Formatter       string                         `json:"formatter,omitempty"`
	DateFormatter   string                         `json:"date_formatter,omitempty"`
	AutoFill        bool                           `json:"auto_fill,omitempty"`
	Multiple        bool                           `json:"multiple,omitempty"`
	TableId         string                         `json:"table_id,omitempty"`
	TableName       string                         `json:"table_name,omitempty"`
	BackFieldName   string                         `json:"back_field_name,omitempty"`
	ForceSendFields []string                       `json:"-"`
}

func (s *AppTableFieldProperty) MarshalJSON() ([]byte, error) {
	type cp AppTableFieldProperty
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableFieldPropertyOption struct {
	Name            string   `json:"name,omitempty"`
	Id              string   `json:"id,omitempty"`
	Color           int      `json:"color,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppTableFieldPropertyOption) MarshalJSON() ([]byte, error) {
	type cp AppTableFieldPropertyOption
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecord struct {
	RecordId         string                 `json:"record_id,omitempty"`
	CreatedBy        *Person                `json:"created_by,omitempty"`
	CreatedTime      int                    `json:"created_time,omitempty"`
	LastModifiedBy   *Person                `json:"last_modified_by,omitempty"`
	LastModifiedTime int                    `json:"last_modified_time,omitempty"`
	Fields           map[string]interface{} `json:"fields,omitempty"`
	ForceSendFields  []string               `json:"-"`
}

func (s *AppTableRecord) MarshalJSON() ([]byte, error) {
	type cp AppTableRecord
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableView struct {
	ViewId          string   `json:"view_id,omitempty"`
	ViewName        string   `json:"view_name,omitempty"`
	ViewType        string   `json:"view_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppTableView) MarshalJSON() ([]byte, error) {
	type cp AppTableView
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Attachment struct {
	FileToken       string   `json:"file_token,omitempty"`
	Name            string   `json:"name,omitempty"`
	Type            string   `json:"type,omitempty"`
	Size            int      `json:"size,omitempty"`
	Url             string   `json:"url,omitempty"`
	TmpUrl          string   `json:"tmp_url,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Attachment) MarshalJSON() ([]byte, error) {
	type cp Attachment
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DeleteRecord struct {
	Deleted         bool     `json:"deleted,omitempty"`
	RecordId        string   `json:"record_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DeleteRecord) MarshalJSON() ([]byte, error) {
	type cp DeleteRecord
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DisplayApp struct {
	AppToken        string   `json:"app_token,omitempty"`
	Name            string   `json:"name,omitempty"`
	Revision        int      `json:"revision,omitempty"`
	IsAdvanced      bool     `json:"is_advanced,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DisplayApp) MarshalJSON() ([]byte, error) {
	type cp DisplayApp
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DisplayAppV2 struct {
	AppToken        string   `json:"app_token,omitempty"`
	Name            string   `json:"name,omitempty"`
	IsAdvanced      bool     `json:"is_advanced,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DisplayAppV2) MarshalJSON() ([]byte, error) {
	type cp DisplayAppV2
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Person struct {
	Id              string   `json:"id,omitempty"`
	Name            string   `json:"name,omitempty"`
	EnName          string   `json:"en_name,omitempty"`
	Email           string   `json:"email,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Person) MarshalJSON() ([]byte, error) {
	type cp Person
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ReqApp struct {
	Name            string   `json:"name,omitempty"`
	FolderToken     string   `json:"folder_token,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ReqApp) MarshalJSON() ([]byte, error) {
	type cp ReqApp
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ReqTable struct {
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ReqTable) MarshalJSON() ([]byte, error) {
	type cp ReqTable
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ReqView struct {
	ViewName        string   `json:"view_name,omitempty"`
	ViewType        string   `json:"view_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ReqView) MarshalJSON() ([]byte, error) {
	type cp ReqView
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Url struct {
	Text            string   `json:"text,omitempty"`
	Link            string   `json:"link,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Url) MarshalJSON() ([]byte, error) {
	type cp Url
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppGetResult struct {
	App *DisplayApp `json:"app,omitempty"`
}

type AppUpdateReqBody struct {
	Name            string   `json:"name,omitempty"`
	IsAdvanced      bool     `json:"is_advanced,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppUpdateReqBody) MarshalJSON() ([]byte, error) {
	type cp AppUpdateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppUpdateResult struct {
	App *DisplayAppV2 `json:"app,omitempty"`
}

type AppRoleCreateResult struct {
	Role *AppRole `json:"role,omitempty"`
}

type AppRoleListResult struct {
	Items     []*AppRole `json:"items,omitempty"`
	PageToken string     `json:"page_token,omitempty"`
	HasMore   bool       `json:"has_more,omitempty"`
	Total     int        `json:"total,omitempty"`
}

type AppRoleUpdateResult struct {
	Role *AppRole `json:"role,omitempty"`
}

type AppRoleMemberListResult struct {
	Items     []*AppRoleMember `json:"items,omitempty"`
	HasMore   bool             `json:"has_more,omitempty"`
	PageToken string           `json:"page_token,omitempty"`
	Total     int              `json:"total,omitempty"`
}

type AppTableBatchCreateReqBody struct {
	Tables          []*ReqTable `json:"tables,omitempty"`
	ForceSendFields []string    `json:"-"`
}

func (s *AppTableBatchCreateReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableBatchCreateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableBatchCreateResult struct {
	TableIds []string `json:"table_ids,omitempty"`
}

type AppTableBatchDeleteReqBody struct {
	TableIds        []string `json:"table_ids,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppTableBatchDeleteReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableBatchDeleteReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableCreateReqBody struct {
	Table           *ReqTable `json:"table,omitempty"`
	ForceSendFields []string  `json:"-"`
}

func (s *AppTableCreateReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableCreateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableCreateResult struct {
	TableId string `json:"table_id,omitempty"`
}

type AppTableListResult struct {
	HasMore   bool        `json:"has_more,omitempty"`
	PageToken string      `json:"page_token,omitempty"`
	Total     int         `json:"total,omitempty"`
	Items     []*AppTable `json:"items,omitempty"`
}

type AppTableFieldCreateResult struct {
	Field *AppTableField `json:"field,omitempty"`
}

type AppTableFieldDeleteResult struct {
	FieldId string `json:"field_id,omitempty"`
	Deleted bool   `json:"deleted,omitempty"`
}

type AppTableFieldListResult struct {
	HasMore   bool             `json:"has_more,omitempty"`
	PageToken string           `json:"page_token,omitempty"`
	Total     int              `json:"total,omitempty"`
	Items     []*AppTableField `json:"items,omitempty"`
}

type AppTableFieldUpdateResult struct {
	Field *AppTableField `json:"field,omitempty"`
}

type AppTableRecordBatchCreateReqBody struct {
	Records         []*AppTableRecord `json:"records,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *AppTableRecordBatchCreateReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableRecordBatchCreateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecordBatchCreateResult struct {
	Records []*AppTableRecord `json:"records,omitempty"`
}

type AppTableRecordBatchDeleteReqBody struct {
	Records         []string `json:"records,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppTableRecordBatchDeleteReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableRecordBatchDeleteReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecordBatchDeleteResult struct {
	Records []*DeleteRecord `json:"records,omitempty"`
}

type AppTableRecordBatchUpdateReqBody struct {
	Records         []*AppTableRecord `json:"records,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *AppTableRecordBatchUpdateReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableRecordBatchUpdateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecordBatchUpdateResult struct {
	Records []*AppTableRecord `json:"records,omitempty"`
}

type AppTableRecordCreateResult struct {
	Record *AppTableRecord `json:"record,omitempty"`
}

type AppTableRecordDeleteResult struct {
	Deleted  bool   `json:"deleted,omitempty"`
	RecordId string `json:"record_id,omitempty"`
}

type AppTableRecordGetResult struct {
	Record *AppTableRecord `json:"record,omitempty"`
}

type AppTableRecordListResult struct {
	HasMore   bool              `json:"has_more,omitempty"`
	PageToken string            `json:"page_token,omitempty"`
	Total     int               `json:"total,omitempty"`
	Items     []*AppTableRecord `json:"items,omitempty"`
}

type AppTableRecordUpdateResult struct {
	Record *AppTableRecord `json:"record,omitempty"`
}

type AppTableViewCreateResult struct {
	View *AppTableView `json:"view,omitempty"`
}

type AppTableViewListResult struct {
	Items     []*AppTableView `json:"items,omitempty"`
	PageToken string          `json:"page_token,omitempty"`
	HasMore   bool            `json:"has_more,omitempty"`
	Total     int             `json:"total,omitempty"`
}
