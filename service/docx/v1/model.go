// Code generated by lark suite oapi sdk gen
package v1

import (
	"github.com/larksuite/oapi-sdk-go/api/core/tools"
)

type Bitable struct {
	Token           string   `json:"token,omitempty"`
	ViewType        int      `json:"view_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Bitable) MarshalJSON() ([]byte, error) {
	type cp Bitable
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Block struct {
	BlockId         string          `json:"block_id,omitempty"`
	ParentId        string          `json:"parent_id,omitempty"`
	Children        []string        `json:"children,omitempty"`
	BlockType       int             `json:"block_type,omitempty"`
	Page            *Text           `json:"page,omitempty"`
	Text            *Text           `json:"text,omitempty"`
	Heading1        *Text           `json:"heading1,omitempty"`
	Heading2        *Text           `json:"heading2,omitempty"`
	Heading3        *Text           `json:"heading3,omitempty"`
	Heading4        *Text           `json:"heading4,omitempty"`
	Heading5        *Text           `json:"heading5,omitempty"`
	Heading6        *Text           `json:"heading6,omitempty"`
	Heading7        *Text           `json:"heading7,omitempty"`
	Heading8        *Text           `json:"heading8,omitempty"`
	Heading9        *Text           `json:"heading9,omitempty"`
	Bullet          *Text           `json:"bullet,omitempty"`
	Ordered         *Text           `json:"ordered,omitempty"`
	Code            *Text           `json:"code,omitempty"`
	Quote           *Text           `json:"quote,omitempty"`
	Equation        *Text           `json:"equation,omitempty"`
	Todo            *Text           `json:"todo,omitempty"`
	Bitable         *Bitable        `json:"bitable,omitempty"`
	Callout         *Callout        `json:"callout,omitempty"`
	ChatCard        *ChatCard       `json:"chat_card,omitempty"`
	Diagram         *Diagram        `json:"diagram,omitempty"`
	Divider         *Divider        `json:"divider,omitempty"`
	File            *File           `json:"file,omitempty"`
	Grid            *Grid           `json:"grid,omitempty"`
	GridColumn      *GridColumn     `json:"grid_column,omitempty"`
	Iframe          *Iframe         `json:"iframe,omitempty"`
	Image           *Image          `json:"image,omitempty"`
	Isv             *Isv            `json:"isv,omitempty"`
	Mindnote        *Mindnote       `json:"mindnote,omitempty"`
	Sheet           *Sheet          `json:"sheet,omitempty"`
	Table           *Table          `json:"table,omitempty"`
	TableCell       *TableCell      `json:"table_cell,omitempty"`
	View            *View           `json:"view,omitempty"`
	Undefined       *Undefined      `json:"undefined,omitempty"`
	QuoteContainer  *QuoteContainer `json:"quote_container,omitempty"`
	ForceSendFields []string        `json:"-"`
}

func (s *Block) MarshalJSON() ([]byte, error) {
	type cp Block
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Callout struct {
	BackgroundColor int      `json:"background_color,omitempty"`
	BorderColor     int      `json:"border_color,omitempty"`
	TextColor       int      `json:"text_color,omitempty"`
	EmojiId         string   `json:"emoji_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Callout) MarshalJSON() ([]byte, error) {
	type cp Callout
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ChatCard struct {
	ChatId          int64    `json:"chat_id,omitempty,string"`
	Align           int      `json:"align,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ChatCard) MarshalJSON() ([]byte, error) {
	type cp ChatCard
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DeleteGridColumnRequest struct {
	ColumnIndex     int      `json:"column_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DeleteGridColumnRequest) MarshalJSON() ([]byte, error) {
	type cp DeleteGridColumnRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DeleteTableColumnsRequest struct {
	ColumnStartIndex int      `json:"column_start_index,omitempty"`
	ColumnEndIndex   int      `json:"column_end_index,omitempty"`
	ForceSendFields  []string `json:"-"`
}

func (s *DeleteTableColumnsRequest) MarshalJSON() ([]byte, error) {
	type cp DeleteTableColumnsRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DeleteTableRowsRequest struct {
	RowStartIndex   int      `json:"row_start_index,omitempty"`
	RowEndIndex     int      `json:"row_end_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DeleteTableRowsRequest) MarshalJSON() ([]byte, error) {
	type cp DeleteTableRowsRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Diagram struct {
	DiagramType     int      `json:"diagram_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Diagram) MarshalJSON() ([]byte, error) {
	type cp Diagram
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Divider struct {
}

type Document struct {
	DocumentId      string   `json:"document_id,omitempty"`
	RevisionId      int      `json:"revision_id,omitempty"`
	Title           string   `json:"title,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Document) MarshalJSON() ([]byte, error) {
	type cp Document
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Equation struct {
	Content         string   `json:"content,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Equation) MarshalJSON() ([]byte, error) {
	type cp Equation
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type File struct {
	Token           string   `json:"token,omitempty"`
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *File) MarshalJSON() ([]byte, error) {
	type cp File
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Grid struct {
	ColumnSize      int      `json:"column_size,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Grid) MarshalJSON() ([]byte, error) {
	type cp Grid
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type GridColumn struct {
	WidthRatio      int      `json:"width_ratio,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *GridColumn) MarshalJSON() ([]byte, error) {
	type cp GridColumn
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Iframe struct {
	Component       *IframeComponent `json:"component,omitempty"`
	ForceSendFields []string         `json:"-"`
}

func (s *Iframe) MarshalJSON() ([]byte, error) {
	type cp Iframe
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type IframeComponent struct {
	IframeType      int      `json:"iframe_type,omitempty"`
	Url             string   `json:"url,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *IframeComponent) MarshalJSON() ([]byte, error) {
	type cp IframeComponent
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Image struct {
	Width           int      `json:"width,omitempty"`
	Height          int      `json:"height,omitempty"`
	Token           string   `json:"token,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Image) MarshalJSON() ([]byte, error) {
	type cp Image
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type InlineBlock struct {
	BlockId         string   `json:"block_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *InlineBlock) MarshalJSON() ([]byte, error) {
	type cp InlineBlock
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type InlineFile struct {
	FileToken       string   `json:"file_token,omitempty"`
	SourceBlockId   string   `json:"source_block_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *InlineFile) MarshalJSON() ([]byte, error) {
	type cp InlineFile
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type InsertGridColumnRequest struct {
	ColumnIndex     int      `json:"column_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *InsertGridColumnRequest) MarshalJSON() ([]byte, error) {
	type cp InsertGridColumnRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type InsertTableColumnRequest struct {
	ColumnIndex     int      `json:"column_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *InsertTableColumnRequest) MarshalJSON() ([]byte, error) {
	type cp InsertTableColumnRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type InsertTableRowRequest struct {
	RowIndex        int      `json:"row_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *InsertTableRowRequest) MarshalJSON() ([]byte, error) {
	type cp InsertTableRowRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Isv struct {
	ComponentId     string   `json:"component_id,omitempty"`
	ComponentTypeId string   `json:"component_type_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Isv) MarshalJSON() ([]byte, error) {
	type cp Isv
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Link struct {
	Url             string   `json:"url,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Link) MarshalJSON() ([]byte, error) {
	type cp Link
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MentionDoc struct {
	Token           string   `json:"token,omitempty"`
	ObjType         int      `json:"obj_type,omitempty"`
	Url             string   `json:"url,omitempty"`
	Title           string   `json:"title,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *MentionDoc) MarshalJSON() ([]byte, error) {
	type cp MentionDoc
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MentionUser struct {
	UserId          string   `json:"user_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *MentionUser) MarshalJSON() ([]byte, error) {
	type cp MentionUser
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MergeTableCellsRequest struct {
	RowStartIndex    int      `json:"row_start_index,omitempty"`
	RowEndIndex      int      `json:"row_end_index,omitempty"`
	ColumnStartIndex int      `json:"column_start_index,omitempty"`
	ColumnEndIndex   int      `json:"column_end_index,omitempty"`
	ForceSendFields  []string `json:"-"`
}

func (s *MergeTableCellsRequest) MarshalJSON() ([]byte, error) {
	type cp MergeTableCellsRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Mindnote struct {
	Token           string   `json:"token,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Mindnote) MarshalJSON() ([]byte, error) {
	type cp Mindnote
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type QuoteContainer struct {
}

type Reminder struct {
	CreateUserId    string   `json:"create_user_id,omitempty"`
	IsNotify        bool     `json:"is_notify,omitempty"`
	IsWholeDay      bool     `json:"is_whole_day,omitempty"`
	ExpireTime      int64    `json:"expire_time,omitempty,string"`
	NotifyTime      int64    `json:"notify_time,omitempty,string"`
	ForceSendFields []string `json:"-"`
}

func (s *Reminder) MarshalJSON() ([]byte, error) {
	type cp Reminder
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ReplaceFileRequest struct {
	Token           string   `json:"token,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ReplaceFileRequest) MarshalJSON() ([]byte, error) {
	type cp ReplaceFileRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ReplaceImageRequest struct {
	Token           string   `json:"token,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ReplaceImageRequest) MarshalJSON() ([]byte, error) {
	type cp ReplaceImageRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Sheet struct {
	Token           string   `json:"token,omitempty"`
	RowSize         int      `json:"row_size,omitempty"`
	ColumnSize      int      `json:"column_size,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Sheet) MarshalJSON() ([]byte, error) {
	type cp Sheet
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Table struct {
	Cells           []string       `json:"cells,omitempty"`
	Property        *TableProperty `json:"property,omitempty"`
	ForceSendFields []string       `json:"-"`
}

func (s *Table) MarshalJSON() ([]byte, error) {
	type cp Table
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type TableCell struct {
}

type TableMergeInfo struct {
	RowSpan         int      `json:"row_span,omitempty"`
	ColSpan         int      `json:"col_span,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *TableMergeInfo) MarshalJSON() ([]byte, error) {
	type cp TableMergeInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type TableProperty struct {
	RowSize         int               `json:"row_size,omitempty"`
	ColumnSize      int               `json:"column_size,omitempty"`
	ColumnWidth     []int             `json:"column_width,omitempty"`
	MergeInfo       []*TableMergeInfo `json:"merge_info,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *TableProperty) MarshalJSON() ([]byte, error) {
	type cp TableProperty
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Text struct {
	Style           *TextStyle     `json:"style,omitempty"`
	Elements        []*TextElement `json:"elements,omitempty"`
	ForceSendFields []string       `json:"-"`
}

func (s *Text) MarshalJSON() ([]byte, error) {
	type cp Text
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type TextElement struct {
	TextRun         *TextRun          `json:"text_run,omitempty"`
	MentionUser     *MentionUser      `json:"mention_user,omitempty"`
	MentionDoc      *MentionDoc       `json:"mention_doc,omitempty"`
	Reminder        *Reminder         `json:"reminder,omitempty"`
	File            *InlineFile       `json:"file,omitempty"`
	Undefined       *UndefinedElement `json:"undefined,omitempty"`
	InlineBlock     *InlineBlock      `json:"inline_block,omitempty"`
	Equation        *Equation         `json:"equation,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *TextElement) MarshalJSON() ([]byte, error) {
	type cp TextElement
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type TextElementStyle struct {
	Bold            bool     `json:"bold,omitempty"`
	Italic          bool     `json:"italic,omitempty"`
	Strikethrough   bool     `json:"strikethrough,omitempty"`
	Underline       bool     `json:"underline,omitempty"`
	InlineCode      bool     `json:"inline_code,omitempty"`
	BackgroundColor int      `json:"background_color,omitempty"`
	TextColor       int      `json:"text_color,omitempty"`
	Link            *Link    `json:"link,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *TextElementStyle) MarshalJSON() ([]byte, error) {
	type cp TextElementStyle
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type TextRun struct {
	Content          string            `json:"content,omitempty"`
	TextElementStyle *TextElementStyle `json:"text_element_style,omitempty"`
	ForceSendFields  []string          `json:"-"`
}

func (s *TextRun) MarshalJSON() ([]byte, error) {
	type cp TextRun
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type TextStyle struct {
	Align           int      `json:"align,omitempty"`
	Done            bool     `json:"done,omitempty"`
	Folded          bool     `json:"folded,omitempty"`
	Language        int      `json:"language,omitempty"`
	Wrap            bool     `json:"wrap,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *TextStyle) MarshalJSON() ([]byte, error) {
	type cp TextStyle
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Undefined struct {
}

type UndefinedElement struct {
}

type UnmergeTableCellsRequest struct {
	RowIndex        int      `json:"row_index,omitempty"`
	ColumnIndex     int      `json:"column_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *UnmergeTableCellsRequest) MarshalJSON() ([]byte, error) {
	type cp UnmergeTableCellsRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UpdateBlockRequest struct {
	UpdateTextElements         *UpdateTextElementsRequest         `json:"update_text_elements,omitempty"`
	UpdateTextStyle            *UpdateTextStyleRequest            `json:"update_text_style,omitempty"`
	UpdateTableProperty        *UpdateTablePropertyRequest        `json:"update_table_property,omitempty"`
	InsertTableRow             *InsertTableRowRequest             `json:"insert_table_row,omitempty"`
	InsertTableColumn          *InsertTableColumnRequest          `json:"insert_table_column,omitempty"`
	DeleteTableRows            *DeleteTableRowsRequest            `json:"delete_table_rows,omitempty"`
	DeleteTableColumns         *DeleteTableColumnsRequest         `json:"delete_table_columns,omitempty"`
	MergeTableCells            *MergeTableCellsRequest            `json:"merge_table_cells,omitempty"`
	UnmergeTableCells          *UnmergeTableCellsRequest          `json:"unmerge_table_cells,omitempty"`
	InsertGridColumn           *InsertGridColumnRequest           `json:"insert_grid_column,omitempty"`
	DeleteGridColumn           *DeleteGridColumnRequest           `json:"delete_grid_column,omitempty"`
	UpdateGridColumnWidthRatio *UpdateGridColumnWidthRatioRequest `json:"update_grid_column_width_ratio,omitempty"`
	ReplaceImage               *ReplaceImageRequest               `json:"replace_image,omitempty"`
	ReplaceFile                *ReplaceFileRequest                `json:"replace_file,omitempty"`
	BlockId                    string                             `json:"block_id,omitempty"`
	UpdateText                 *UpdateTextRequest                 `json:"update_text,omitempty"`
	ForceSendFields            []string                           `json:"-"`
}

func (s *UpdateBlockRequest) MarshalJSON() ([]byte, error) {
	type cp UpdateBlockRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UpdateGridColumnWidthRatioRequest struct {
	WidthRatios     []int    `json:"width_ratios,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *UpdateGridColumnWidthRatioRequest) MarshalJSON() ([]byte, error) {
	type cp UpdateGridColumnWidthRatioRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UpdateTablePropertyRequest struct {
	ColumnWidth     int      `json:"column_width,omitempty"`
	ColumnIndex     int      `json:"column_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *UpdateTablePropertyRequest) MarshalJSON() ([]byte, error) {
	type cp UpdateTablePropertyRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UpdateTextElementsRequest struct {
	Elements        []*TextElement `json:"elements,omitempty"`
	ForceSendFields []string       `json:"-"`
}

func (s *UpdateTextElementsRequest) MarshalJSON() ([]byte, error) {
	type cp UpdateTextElementsRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UpdateTextRequest struct {
	Elements        []*TextElement `json:"elements,omitempty"`
	Style           *TextStyle     `json:"style,omitempty"`
	Fields          []int          `json:"fields,omitempty"`
	ForceSendFields []string       `json:"-"`
}

func (s *UpdateTextRequest) MarshalJSON() ([]byte, error) {
	type cp UpdateTextRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UpdateTextStyleRequest struct {
	Style           *TextStyle `json:"style,omitempty"`
	Fields          []int      `json:"fields,omitempty"`
	ForceSendFields []string   `json:"-"`
}

func (s *UpdateTextStyleRequest) MarshalJSON() ([]byte, error) {
	type cp UpdateTextStyleRequest
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type View struct {
	ViewType        int      `json:"view_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *View) MarshalJSON() ([]byte, error) {
	type cp View
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocumentCreateReqBody struct {
	FolderToken     string   `json:"folder_token,omitempty"`
	Title           string   `json:"title,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DocumentCreateReqBody) MarshalJSON() ([]byte, error) {
	type cp DocumentCreateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocumentCreateResult struct {
	Document *Document `json:"document,omitempty"`
}

type DocumentGetResult struct {
	Document *Document `json:"document,omitempty"`
}

type DocumentRawContentResult struct {
	Content string `json:"content,omitempty"`
}

type DocumentBlockBatchUpdateReqBody struct {
	Requests        []*UpdateBlockRequest `json:"requests,omitempty"`
	ForceSendFields []string              `json:"-"`
}

func (s *DocumentBlockBatchUpdateReqBody) MarshalJSON() ([]byte, error) {
	type cp DocumentBlockBatchUpdateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocumentBlockBatchUpdateResult struct {
	Blocks             []*Block `json:"blocks,omitempty"`
	DocumentRevisionId int      `json:"document_revision_id,omitempty"`
	ClientToken        string   `json:"client_token,omitempty"`
}

type DocumentBlockGetResult struct {
	Block *Block `json:"block,omitempty"`
}

type DocumentBlockListResult struct {
	Items     []*Block `json:"items,omitempty"`
	PageToken string   `json:"page_token,omitempty"`
	HasMore   bool     `json:"has_more,omitempty"`
}

type DocumentBlockPatchResult struct {
	Block              *Block `json:"block,omitempty"`
	DocumentRevisionId int    `json:"document_revision_id,omitempty"`
	ClientToken        string `json:"client_token,omitempty"`
}

type DocumentBlockChildrenBatchDeleteReqBody struct {
	StartIndex      int      `json:"start_index,omitempty"`
	EndIndex        int      `json:"end_index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DocumentBlockChildrenBatchDeleteReqBody) MarshalJSON() ([]byte, error) {
	type cp DocumentBlockChildrenBatchDeleteReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocumentBlockChildrenBatchDeleteResult struct {
	DocumentRevisionId int    `json:"document_revision_id,omitempty"`
	ClientToken        string `json:"client_token,omitempty"`
}

type DocumentBlockChildrenCreateReqBody struct {
	Children        []*Block `json:"children,omitempty"`
	Index           int      `json:"index,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DocumentBlockChildrenCreateReqBody) MarshalJSON() ([]byte, error) {
	type cp DocumentBlockChildrenCreateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocumentBlockChildrenCreateResult struct {
	Children           []*Block `json:"children,omitempty"`
	DocumentRevisionId int      `json:"document_revision_id,omitempty"`
	ClientToken        string   `json:"client_token,omitempty"`
}

type DocumentBlockChildrenGetResult struct {
	Items     []*Block `json:"items,omitempty"`
	PageToken string   `json:"page_token,omitempty"`
	HasMore   bool     `json:"has_more,omitempty"`
}
